// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id        String      @id @default(uuid())
  nome      String
  descricao String
  preco     Float
  imagem    String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]
}

model User {
  id       String    @id @default(uuid())
  nome     String
  endereco String
  email    String    @unique
  senha    String
  orders   Order[]
  payments Payment[]
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  status    String      @default("pending")
  total     Float
  items     OrderItem[]
  payment   Payment?    @relation(fields: [paymentId], references: [id])
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  paymentId String?
}

model OrderItem {
  id         String  @id @default(uuid())
  orderId    String
  order      Order   @relation(fields: [orderId], references: [id])
  productId  String
  product    Product @relation(fields: [productId], references: [id])
  quantidade Int
  preco      Float
}

model Payment {
  id        String   @id @default(uuid())
  orderId   String
  method    String
  status    String   @default("pending")
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Order     Order[]
}
